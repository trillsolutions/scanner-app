# .github/workflows/build.yml
name: Build Windows TrillED Scanner App

on: [push]

jobs:
 build:
   runs-on: windows-latest
   
   steps:
   - uses: actions/checkout@v4
   
   - name: Set up Python
     uses: actions/setup-python@v4
     with:
       python-version: '3.11'
   
   - name: Install dependencies
     run: |
       python -m pip install --upgrade pip
       pip install -r requirements-win.txt

   - name: Install VC++ Redistributable
     run: |
       Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vc_redist.x64.exe" -OutFile "vc_redist.x64.exe"
       Start-Process -FilePath "vc_redist.x64.exe" -ArgumentList "/install", "/quiet", "/norestart" -Wait

   - name: Download ZBar DLLs
     run: |
       Invoke-WebRequest -Uri "https://github.com/NaturalHistoryMuseum/barcode-reader-dlls/releases/download/0.1/libzbar-64.dll" -OutFile "libzbar-64.dll"
       Invoke-WebRequest -Uri "https://github.com/NaturalHistoryMuseum/barcode-reader-dlls/releases/download/0.1/libzbar-32.dll" -OutFile "libzbar-32.dll"
       Invoke-WebRequest -Uri "https://github.com/NaturalHistoryMuseum/barcode-reader-dlls/releases/download/0.1/libiconv.dll" -OutFile "libiconv.dll"
       Invoke-WebRequest -Uri "https://github.com/NaturalHistoryMuseum/barcode-reader-dlls/releases/download/0.1/libiconv-2.dll" -OutFile "libiconv-2.dll"

   - name: Create logs directory
     run: mkdir logs

   - name: Convert app icon
     run: |
       python -c "from PIL import Image; img = Image.open('app_icon.png').convert('RGBA'); img.save('icon.ico', format='ICO', sizes=[(256, 256), (48, 48), (32, 32), (16, 16)])"
   
   - name: Build with PyInstaller (64-bit)
     run: |
       pyinstaller --onefile --windowed --name "scanner_x64" --icon=icon.ico `
       --add-data "sounds/*;sounds/" `
       --add-data "config.json;." `
       --add-data "libzbar-64.dll;." `
       --add-data "libiconv.dll;." `
       --hidden-import=pyzbar.pyzbar `
       --add-data "logs;logs" `
       --hidden-import=PyQt5.QtCore `
       --hidden-import=PyQt5.QtGui `
       --hidden-import=PyQt5.QtWidgets `
       --collect-all PyQt5 `
       main.py


   - name: Build with PyInstaller (32-bit)
     run: |
       pyinstaller --onefile --windowed --name "scanner_x86" --icon=icon.ico `
       --add-data "sounds/*;sounds/" `
       --add-data "config.json;." `
       --add-data "libzbar-32.dll;." `
       --add-data "libiconv-2.dll;." `
       --hidden-import=pyzbar.pyzbar `
       --add-data "logs;logs" `
       --hidden-import=PyQt5.QtCore `
       --hidden-import=PyQt5.QtGui `
       --hidden-import=PyQt5.QtWidgets `
       --collect-all PyQt5 `
       main.py   
        
   - name: Upload exe artifacts
     uses: actions/upload-artifact@v4
     with:
       name: windows-build
       path: dist/*.exe


   - name: Create Windows Installer
     run: |
      choco install nsis --force
      copy icon.ico dist\
      makensis installer.nsi

   - name: Upload installer
     uses: actions/upload-artifact@v4
     with:
      name: TrillED_Attendance_Scanner_Setup
      path: TrillED_Attendance_Scanner_Setup.exe